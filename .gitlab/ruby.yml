##############################################################################
# Copyright (c) 2019-2021, Lawrence Livermore National Security, LLC and
# RADIUSS project contributors. See the COPYRIGHT file for details.
#
# SPDX-License-Identifier: (MIT)
##############################################################################

variables:
  RUBY_ALLOC_NAME: ${CI_PROJECT_NAME}_ci_${CI_PIPELINE_ID}
  RUBY_SHARED_ALLOC: "--exclusive --reservation=ci --time=30 --nodes=2"
  RUBY_JOB_ALLOC: "--reservation=ci --overlap --nodes=1"

.on-ruby:
  tags:
    - shell
    - ruby
  rules:
    # Runs except if we explicitly deactivate ruby by variable.
    - if: '$ON_RUBY == "OFF"'
      when: never
    # We should always release resources allocated in the pipeline.
    - if: '$CI_JOB_NAME =~ /release_resources/'
      when: always
    # A true statement is expected to allow jobs to run. Here is the default.
    - when: on_success

allocate_resources:
  variables:
    GIT_STRATEGY: none
  extends: [.on-ruby, .ruby-variables]
  stage: .pre
  script:
    - salloc ${RUBY_SHARED_ALLOC} --no-shell --job-name=${RUBY_ALLOC_NAME}

release_resources:
  variables:
    GIT_STRATEGY: none
  extends: [.on-ruby, .ruby-variables]
  stage: .post
  script:
    - export JOBID=$(squeue -h --name=${RUBY_ALLOC_NAME} --format=%A)
    - ([[ -n "${JOBID}" ]] && scancel ${JOBID} || exit 0)

#[get-spack--]
get-spack-ruby:
  extends: [.on-ruby, .ruby-variables]
  stage: setup
  script:
    - export ALLOC_ID=$(flux jobs --name="${CORONA_ALLOC_NAME}" -n -o "{id}")
    - srun $( [[ -n "${JOBID}" ]] && echo "--jobid=${JOBID}" ) --reservation=ci --nodes=2 -n 2 scripts/get-spack
#[--get-spack]

generate-on-ruby:
  extends: [.on-ruby, .ruby-variables]
  stage: generate
  script:
    - scripts/print-variables
    - export JOBID=$(squeue -h --name=${RUBY_ALLOC_NAME} --format=%A)
    - srun $( [[ -n "${JOBID}" ]] && echo "--jobid=${JOBID}" ) --reservation=ci --nodes=1 .gitlab/spack/generate-script.sh
  artifacts:
    paths:
      - "${CI_PROJECT_DIR}/jobs_scratch_dir"

#[send-variable-child--]
build-on-ruby:
  extends: [.ruby-variables]
  stage: build
  trigger:
    include:
      - artifact: "jobs_scratch_dir/pipeline.yml"
        job: generate-on-ruby
      - local: ".gitlab/ruby-shared-alloc.yml"
      - project: "lc-templates/id_tokens"
        file: "id_tokens.yml"
    strategy: depend
    forward:
      pipeline_variables: true
  needs: [generate-on-ruby]
#[--send-variable-child]

#[rm-spack--]
rm-spack-ruby:
  extends: [.on-ruby, .ruby-variables]
  stage: clean
  script:
    - export ALLOC_ID=$(flux jobs --name="${CORONA_ALLOC_NAME}" -n -o "{id}")
    - srun $( [[ -n "${JOBID}" ]] && echo "--jobid=${JOBID}" ) --reservation=ci --nodes=2 -n 2 scripts/remove-spack
#[--rm-spack]
