#!/bin/bash

SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
REPO_DIR=$SCRIPT_DIR/..
BASE_PATH=test_dir

SPACK_ENV_PATH=$REPO_DIR

# get-spack variables
export SPACK_REPO=https://github.com/spack/spack.git
export SPACK_PATH=spack
export SPACK_BIN=$SPACK_PATH/bin
export SPACK_REF="${SPACK_REF:-develop}"
export CI_PIPELINE_ID="${CI_PIPELINE_ID:-}"

echo "~~~~~~~~~~~~~ test-blt variables ~~~~~~~~~~~~~~"
  echo SCRIPT_DIR=$SCRIPT_DIR
  echo REPO_DIR=$REPO_DIR
  echo BASE_PATH=$BASE_PATH
  echo SPACK_REPO=$SPACK_REPO
  echo SPACK_PATH=$SPACK_PATH
  echo SPACK_REF=$SPACK_REF
  echo CI_PIPELINE_ID=$CI_PIPELINE_ID
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"

rm -rf $BASE_PATH
mkdir $BASE_PATH

cd $BASE_PATH
  # Setup Spack
  $SCRIPT_DIR/get-spack
  cp -R $REPO_DIR/packages/* $SPACK_PATH/var/spack/repos/builtin/packages

  # Load environment and build/test BLT
  mkdir spack-build
  cd spack-build
    echo "~~ kill previous environment"
    export SPACK_ENV=

    echo "~~ spack clean"
    ../$SPACK_BIN/spack clean --misc-cache --failures --python-cache

    echo "~~ spack env create test1 $REPO_DIR/spack-environments/blt-test/toss3-clang10.yaml"
    ../$SPACK_BIN/spack env create test1 $REPO_DIR/spack-environments/blt-test/toss3-clang10.yaml

    #echo "~~ spack -d env activate --sh test1"
    #eval `../$SPACK_BIN/spack env activate --sh test1`

    echo "~~ spack concretize"
    ../$SPACK_BIN/spack -e test1 concretize

    echo "~~ spack find"
    ../$SPACK_BIN/spack -e test1 find -cvl

    echo "~~ spack install"
    ../$SPACK_BIN/spack -e test1 install
  cd ..
cd ..
